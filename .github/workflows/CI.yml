name: CI

on: [push, pull_request]

env:
  ProjectName: get_cnip
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
      TARGET : x86_64-unknown-linux-gnu

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build ${{ env.TARGET }}
      run: cargo build --release --target="${{ env.TARGET }}"

    - name: Run UPX
      uses: crazy-max/ghaction-upx@v1.4.0
      with:
        files: target/${{ env.TARGET }}/release/${{ env.ProjectName }}
        args: -9

    - name: Upload ${{ env.TARGET }}
      continue-on-error: true
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ProjectName }}.${{ env.TARGET }}
        path: target/${{ env.TARGET }}/release/${{ env.ProjectName }}

  build-windows:
    runs-on: windows-latest
    env:
      RUST_BACKTRACE: full
      TARGET : x86_64-pc-windows-msvc

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build ${{ env.TARGET }}
      run: cargo build --release --target="${{ env.TARGET }}"

    - name: Run UPX
      uses: crazy-max/ghaction-upx@v1.4.0
      with:
        files: target/${{ env.TARGET }}/release/${{ env.ProjectName }}.exe
        args: --best

    - name: Upload ${{ env.TARGET }}
      continue-on-error: true
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ProjectName }}.${{ env.TARGET }}
        path: target/${{ env.TARGET }}/release/${{ env.ProjectName }}.exe
